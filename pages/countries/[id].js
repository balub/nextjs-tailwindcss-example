import React from "react";
import Head from "next/head";
import Image from "next/image";
import { useRouter } from "next/router";
import { ArrowSmLeftIcon } from "@heroicons/react/solid";

import { getCountryDetailsByName, countries } from "../../countries";
import DetailDisplay from "../../components/DetailDisplay";

function CountryPage({ country }) {
  const router = useRouter();
  return (
    <>
      <Head>
        <title>{country.name}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="mt-8 mx-16 ">
        <div
          onClick={() => router.push("/")}
          className="flex flex-row items-center p-2 bg-white border-2 dark:border-none marker: dark:bg-darkBlue dark:shadow-xl  w-fit"
        >
          <ArrowSmLeftIcon className="w-8 h-8 " />
          <span className="mx-2">Back</span>
        </div>

        <div className="mt-16  flex flex-row justify-around">
          <div className="h-72 w-96 relative ">
            <Image
              src={country.flags}
              alt="country flag"
              layout="fill"
              objectFit="cover"
            />
          </div>

          <div className="w-1/2 text-veryDarkBlue dark:text-white">
            <p className="font-bold text-3xl mt-3 ">{country.name}</p>
            <div className="mt-6 flex flex-row justify-between">
              <DetailDisplay
                detail={"Population"}
                value={country.population}
                className=""
              />
              <DetailDisplay
                detail={"Currencies"}
                value={Object.keys(country.currencies)
                  .map((key, indexedDB) => {
                    return key;
                  })
                  .join(",")}
              />
            </div>
            <div className="mt-2 flex flex-row justify-between">
              <DetailDisplay detail={"Region"} value={country.region} />
              <DetailDisplay
                detail={"Languages"}
                value={Object.keys(country.languages)
                  .map((key, indexedDB) => {
                    return key;
                  })
                  .join(",")}
              />
            </div>
            <div className="mt-2">
              <DetailDisplay detail={"Sub Region"} value={country.subregion} />
            </div>
            <div className="mt-2">
              <DetailDisplay detail={"Capital"} value={country.capital[0]} />
            </div>
            {country.borders && (
              <div className="mt-4">
                <p className="dark:text-gray-300 text-lg">
                  <span className="dark:text-white">Border Countries: </span>
                  {country.borders &&
                    country.borders.map((border) => (
                      <span
                        className="px-2 mx-2  dark:bg-darkBlue dark:shadow-xl"
                        key={border}
                      >
                        {border}
                      </span>
                    ))}
                </p>
              </div>
            )}
          </div>
        </div>
      </div>
    </>
  );
}

export default CountryPage;

export async function getStaticProps({ params }) {
  const country = getCountryDetailsByName(params.id);
  return {
    props: { country },
  };
}

export async function getStaticPaths() {
  return {
    paths: countries.map((country) => ({
      params: { id: country.name },
    })),
    fallback: false,
  };
}
